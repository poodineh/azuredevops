#Summary
#   1. <Add description for your pipeline here>
#   2. YAML Reference - https://docs.microsoft.com/en-us/azure/devops/pipelines/yaml-schema?view=azure-devops&tabs=schema%2Cparameter-schema
#   3. AAG Shared Templates Reference: https://itsals.visualstudio.com/SoftwareTransformation/_git/DevOps?path=%2FYAML%2FBuilds&version=GBmaster&_a=contents

#1. Set Runtime Name
name: $(Build.DefinitionName)_$(Build.SourceBranchName)_$(Date:yyyyMMddHHmm)$(Rev:.r)

#2. Set Triggers -- This will trigger the pipeline when any changes are pushed to remote branch.  Specify branch name or '*' for all branches
trigger:
# branch triggers. Commenting out to trigger builds on all branches
  branches:
    include:
    - master
    - develop
    - feature*
  ### Specify the relative paths you want to include for your triggers
  # paths:
  #   include:
  #   - AzureDevOpsReleaseEvents/*

#3. Specify variables you want to include in your pipeline
variables: 
  - group: PipelineVariables

#4. Create Resource References
resources:
  pipelines:
  ### Retrieve Pipeline Shared Resources
  ### Do Not Remove. Needed for downloading code coverage files
  - pipeline: DevOps
    project: SoftwareTransformation
    source: DevOps # Build definition ID. Found under varibles
    
  ### Retrieve Pipeline Shared Resources
  ### Do Not Remove. Needed for referencing shared templates
  repositories:
  - repository: templates  # identifier (A-Z, a-z, 0-9, and underscore)
    type: git  # see below git - azure devops
    name: SoftwareTransformation/DevOps  # Teamproject/repositoryname (format depends on `type`)
    ref: refs/heads/master # ref name to use, defaults to 'refs/heads/master'

#5. Start CI
stages:
#Stage 1 - Perform any prep work here such as config transformations that will be used in the CI job.
- stage: CI_PrepForBuildStage
  jobs:
  - job: PrepForBuild
    pool:
        vmImage: 'windows-latest'
    steps:
    ### Sample Transform -- the config file so it gets the encrypted value from ADO
    # - template: YAML/Builds/ConfigTransform.yml@templates  # Template reference
    #   parameters:
    #     SourcePath: 'AzureDevOpsReleaseEvents/appsettings.Development.json'
    #     Transformations: '
    #     {
    #     "AppSettings/AzureCosmosDBKey":"$(AzureCosmosDBKey)",
    #     "AppSettings/AzureDevOpsPAT":"$(AzureDevOpsPAT)"
    #     }'
            
    ### ALWAYS INCLUDE THIS IN THE PREP JOB
    ### ALL SOURCES DIRECTORY WILL BE UPLOADED IN THE ENTIRE PIPELINE SO IT CAN BE USED REPEATEDLY
    - upload: $(Build.SourcesDirectory)
      ### Do not change this value
      artifact: Prepped
      displayName: 'Uploading Prepped Sources' 

#Stage 2: Build, Test, and Publish the App
- stage: CI_ArtifactsBuildStage
  dependsOn: 'CI_PrepForBuildStage'
  jobs:
    ### Uses CI Shared Templates under https://itsals.visualstudio.com/SoftwareTransformation/_git/DevOps    
  - template: YAML/Builds/NetCore/ContinousIntegration.yml@templates  # Template reference
    parameters:
      #Agent Pools parameters
      ### AgentVmImage valid Values: https://docs.microsoft.com/en-us/azure/devops/pipelines/agents/hosted?view=azure-devops 
      AgentVmImage: 'windows-latest' 

      # Application Build parameters   
      ### <Your application name>
      ApplicationName: 'ReleaseEventsApi'
      ### <Debug or Release>
      BuildConfiguration: 'Debug'
      ###Solution file path
      SonarScanSolutionFile: './SonarScan.sln' 
      ### <Path to your project file>
      ProjectFileLocation: './AzureDevOpsReleaseEvents/AzureDevOpsReleaseEvents.csproj'
      ### <Optional and overrides the .net core version to match what is on agent>
      NetCoreSDKVersion: ''
      ### <Optional parameter for specifying a custom nuget file used in the restore step>
      PathToNugetConfig: ''
      ### <Optional parameter for publishing self contained projects>
      SelfContained: ''

      # Pipeline parameters
      ### <Optional parameter specifying if Pipeline stage contains a prep for build job.>
      ContainsPrepForBuildJob: 'false'

      ### Unit Test parameters
      ### <Path to your test project file>
      TestProjectFileLocation: './AzureDevOpsReleaseEvents.Tests/AzureDevOpsReleaseEvents.Tests.csproj'
      ###<Optional parameter. If left blank, it will use the default pipeline runsettings file>
      RunSettingsFileLocation: ''
      ### <Optional parameter. Add test categories to filter tests>
      TestCategories: '' 
      ###<Optional parameter.Set to true to capture code coverage on linux agents using coverlet.msbuild. Requires Coverlet to be installed in the test projects -- https://www.nuget.org/packages/coverlet.msbuild>
      UseCoverlet: '' 
      ### <Optional parameter. Custom arguments passed to the dotnet test task>
      CustomTestArguments: ''       
      
      # Sonar parameters -  Contact the DevSecOps team for any Sonar related questions
      ###<Required parameter. Sonar Project Key>
      ProjectKey: 'ea-releaseapi'
      ### <Required parameter. Sonar Project Name>
      ProjectName: 'ea-releaseapi'
      ###<Optional parameter. Custom Sonar properties to be added to the Sonar Prepare step>
      ExtraProperties: ''

#Stage 3: Containers
  #1. If using containers, please see CI_StageDocker.yml and sample template in the Docker folder of the Shared Templates for more information